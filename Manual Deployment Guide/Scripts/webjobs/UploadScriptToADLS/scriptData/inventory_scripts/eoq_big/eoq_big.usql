//////////////////////////////////////////////////
// Constants of inventory management policy
/////////////////////////////////////////////////

DECLARE @StoreID string = "1";
DECLARE @StorageID string = "1";
DECLARE @planning_horizon int = 30;
DECLARE @now DateTime = DateTime.Now;
DECLARE @last_day DateTime = @now.Add(new System.TimeSpan(@planning_horizon - 1, 0, 0, 0));

////////////////////////////////////////////////
// Names of input and output directories 
////////////////////////////////////////////////

DECLARE @StaticDataFolder string = "/publicparameters/";
DECLARE @DynamicDataFolder string = "/rawdata/";
DECLARE @GlobalCSVFolder string = "/optimization/input_csv/";

DECLARE @policy_name string = "eoq_big";
DECLARE @CSVFolder string = @GlobalCSVFolder + @policy_name + "/";

////////////////////////////////////////////////
// Names of input files
////////////////////////////////////////////////

DECLARE @StorageFile string = @StaticDataFolder + "store_storage.csv";
DECLARE @ProductStorageFile = @StaticDataFolder + "store_product_storage.csv";
DECLARE @ProductsFile string = @StaticDataFolder + "brands_products.csv";
DECLARE @ProductsSuppliersFile string = @StaticDataFolder + "store_product_supplier.csv";
DECLARE @DemandDir string = @DynamicDataFolder + "demand_forecasts/{*}/{*}/";
DECLARE @DemandFiles string = @DemandDir + 
                              "{ForecastDate:yyyy}-{ForecastDate:MM}-{ForecastDate:dd}_{ForecastDate:HH}_{ForecastDate:mm}_{ForecastDate:ss}.csv";

///////////////////////////////////////////////
// Names of output files
///////////////////////////////////////////////

DECLARE @OutputFile1 string = @CSVFolder + "eoq_big_1_P_0.csv";
DECLARE @OutputFile2 string = @CSVFolder + "eoq_big_2_S_0.csv";
DECLARE @OutputFile3 string = @CSVFolder + "eoq_big_3_P_1.csv";

/////////////////////////////////////////////////
// Load input files
/////////////////////////////////////////////////

@storage = 
    EXTRACT StoreID               string,
            StorageID             string,
            StorageName           string,
            MaxVolume             float,
            StorageCostBudget     float 
    FROM @StorageFile
    USING Extractors.Csv(skipFirstNRows: 1);

@products_storage =
    EXTRACT StoreID                string,
            StorageID              string,
            ProductID              string,
            StorageCost            float,
            MissedSaleCost         float,
            MinInventorySize       int,
            MaxInventorySize       int
    FROM @ProductStorageFile
    USING Extractors.Csv(skipFirstNRows: 1);    

@products =
    EXTRACT BrandID                string,
            ProductID              string,
            ProductName            string,
            [MSRP]                 float,
            ProductVolume          float,
            ShelfLife              string
    FROM @ProductsFile
    USING Extractors.Csv(skipFirstNRows: 1); 

@product_suppliers = 
    EXTRACT StoreID                         string,
            SupplierID                      string,
            ProductID                       string,
            LeadTime                        int,
            LeadTimeConfidenceInterval      int,
            MinOrderQuantity                int,
            MaxOrderQuantity                int,
            QuantityMultiplier              int,
            PurchaseCost                    float,
            BackorderCost                   float,
            ShippingCost                    float,
            PurchaseCostBudget              float,
            OrderingFrequency               string,
            ServiceLevel                    float
    FROM @ProductsSuppliersFile
    USING Extractors.Csv(skipFirstNRows: 1); 

@predicted_demand = 
    EXTRACT StoreID                         string,
            ProductID                       string,
            Timestamp                       DateTime,
            PredictedDemand                 float,
            PredictedDemandDistribution     string,
            PredictedDemandVariance         float,
            PredictedProbability            float,
            ForecastDate                    DateTime
    FROM @DemandFiles
    USING Extractors.Csv(skipFirstNRows: 1); 

///////////////////////////////////////////////////
// Create first CSV file: storage budget
///////////////////////////////////////////////////

@b = SELECT StorageCostBudget AS b FROM @storage WHERE StoreID == @StoreID AND StorageID == @StorageID;  

OUTPUT @b TO @OutputFile1
USING Outputters.Csv(outputHeader: true, quoting: false);

/////////////////////////////////////////////////////
// Create second CSV file: product names
/////////////////////////////////////////////////////

@product_names = SELECT ProductName AS [Q] 
                 FROM @products AS a JOIN @products_storage AS b ON a.ProductID == b.ProductID 
                 WHERE b.StoreID == @StoreID AND b.StorageID == @StorageID; 

OUTPUT @product_names
    TO @OutputFile2
USING Outputters.Csv(outputHeader: true, quoting: false);

///////////////////////////////////////////////////////////////////////////
// Create third CSV file: product demand, shipping cost and storage cost
///////////////////////////////////////////////////////////////////////////

@predicted_demand_store_storage = SELECT a.StoreID, a.ProductID, Timestamp, PredictedDemand, ForecastDate 
                                  FROM @predicted_demand AS a JOIN @products_storage AS b 
                                  ON a.ProductID == b.ProductID AND a.StoreID == b.StoreID
                                  WHERE a.StoreID == @StoreID AND b.StorageID == @StorageID;

@last_forecast_time = SELECT ProductID, Convert.ToDateTime(MAX(ForecastDate)) AS LastForecastDate 
                      FROM @predicted_demand_store_storage GROUP BY ProductID;

@latest_predicted_demand = SELECT a.ProductID, Timestamp, PredictedDemand 
                           FROM @predicted_demand_store_storage AS a 
                           JOIN @last_forecast_time AS b ON a.ProductID == b.ProductID AND ForecastDate == LastForecastDate
                           JOIN @products AS c ON a.ProductID == c.ProductID
                           WHERE Timestamp BETWEEN @now AND @last_day;

@total_demand = SELECT ProductID, SUM(PredictedDemand) AS demand FROM @latest_predicted_demand GROUP BY ProductID; 

@total_demand_names = SELECT ProductName AS [Q], demand FROM @total_demand AS a JOIN @products AS b ON a.ProductID == b.ProductID;

@product_storage_costs = SELECT ProductName AS [Q], StorageCost AS [C] 
                         FROM @products AS a JOIN @products_storage AS b ON a.ProductID == b.ProductID 
                         WHERE b.StoreID == @StoreID AND b.StorageID == @StorageID; 

@product_shipping_costs = SELECT a.ProductName AS [Q], b.ShippingCost AS [K]
                          FROM @products AS a JOIN @product_suppliers AS b ON a.ProductID == b.ProductID 
                                              JOIN @products_storage AS d ON a.ProductID == d.ProductID 
                          WHERE b.StoreID == @StoreID AND d.StoreID == @StoreID AND d.StorageID == @StorageID;

@product_costs = SELECT a.Q, c.demand, b.K, a.C FROM @product_storage_costs AS a 
                 JOIN @product_shipping_costs AS b ON a.Q == b.Q
                 JOIN @total_demand_names AS c ON a.Q == c.Q;

OUTPUT @product_costs TO @OutputFile3
USING Outputters.Csv(outputHeader: true, quoting: false);

